{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverseSort","setReverseSort","visibleGoods","goods","prepareGoods","sort","good1","good2","localeCompare","length","reverse","getReact","className","type","cn","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,OAC5BC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAOMC,EAlCR,SAAkBC,EAAOL,EAAWE,GAClC,IAAMI,EAAY,YAAOD,GAqBzB,OAnBIL,GACFM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAaM,UAGRN,EAYcO,CAASlB,EAAiBK,EAC7CE,GAEF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYhB,IAAcJ,IAC9BqB,QAAS,kBAAMhB,EAAaL,IAJ9B,iCASA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYhB,IAAcH,IAC9BoB,QAAS,kBAAMhB,EAAaJ,IAJ9B,4BASA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAad,IACjBe,QAAS,kBAAMd,GAAgBD,IAJjC,sBASEA,GAAeF,IACf,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA1CU,WAClBhB,EAAa,IACbE,GAAe,IAqCT,sBAUHC,EAAac,KAAI,SAAAb,GAAK,OACrB,6BACE,oBAAgB,UAAQ,OAAxB,SAAgCA,GAAvBA,YCnGnBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ef7767d3.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getReact(goods, sortField, reverseSort) {\n  const prepareGoods = [...goods];\n\n  if (sortField) {\n    prepareGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseSort) {\n    prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseSort, setReverseSort] = useState(false);\n\n  const handleReset = () => {\n    setSortField('');\n    setReverseSort(false);\n  };\n\n  const visibleGoods = getReact(goodsFromServer, sortField,\n    reverseSort);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABETICALLY })}\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !reverseSort })}\n          onClick={() => setReverseSort(!reverseSort)}\n        >\n          Reverse\n        </button>\n\n        {(reverseSort || sortField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      {visibleGoods.map(goods => (\n        <ul>\n          <li key={goods} data-cy=\"Good\">{goods}</li>\n        </ul>\n      ))}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}